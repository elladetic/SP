pacf(x.stl$time.series[,3])
acf(x.stl$time.series[,3]) #skok nakon 4 stupica - AR(4)
#MA(1) = arima(0,0,1)
#AR(1) = arima(1,0,0)
#fitamo MA proces
#AR <- arima(x_no_sez, order = c(4,0,0)) #ovo javlja gresku jer nije stacionarno
#xt_diff = diff(x_no_sez)
plot(xt)
AR <- arima(xt, order = c(2,1,2))
print(AR)
ts.plot(xt)
AR_fit <-xt - residuals(AR)
points(AR_fit, type = "l", col = 2, lty = 2)
#grafički prikaz procjena i 95% pouzdane pruge
AR_forecast <- predict(AR, n.ahead = 24)$pred
AR_forecast_se <- predict(AR, n.ahead = 24)$se
ts.plot(xt, xlim=c(0,40))
points(AR_forecast, type = "l")
points(AR_forecast - 2*AR_forecast_se, type = "l", col = 2, lty = 2)
points(AR_forecast + 2*AR_forecast_se, type = "l", col = 2, lty = 2)
#koliko su naše procjene blizu?
new_korona <- read.csv("korona_hrv_studeni.csv",header=FALSE)
razlika = exp(AR_forecast) - new_korona$V1
razlika
AR_forecast
razlika
auto.arima(x_no_sez)
xt = ts(korona$V1, frequency = 7)
x.stl=stl(xt,s.window = "periodic")
plot.ts(xt, col="red", main="Podaci prije transformacije")
plot(x.stl,col="red", main="STL prije transofrmacije")
#uočavamo eksponencijalni trend, pa ćemo logaritmirati podatke
xt = log(xt)
x.stl=stl(xt,s.window = "periodic")
plot.ts(xt, col="blue", main="Podaci nakon logaritmiranja")
plot(x.stl,col="blue", main="STL nakon logaritmiranja")
x_no_sez = xt -x.stl$time.series[,1]
plot.ts(x_no_sez,col="green",main="Desezonalni niz") #uklananje sezonalnosti
x_no_trend = x_no_sez -x.stl$time.series[,2] #uklanjanje trenda
plot.ts(x_no_trend,col="green",main="Desezonalni niz sa uklonjenim trendom")
acf(x.stl$time.series[,3])
#5 stupića odskače od 23, što je više od 5% pa nemožemo pretpostaviti nekoreliranost
library('nortest')
lillie.test(x.stl$time.series[,3])#mala p vrijednost, ostaci nisu normalni - nemamo bijeli šum
library(forecast)
auto.arima(x_no_sez)
library(forecast)
auto.arima(x_no_sez)
#7 je period (1,0,0) je sezonalni dio, najbolji fit je ARIMA(2,1,2)
fit <- arima(x_no_sez, c(2, 1, 2))
AR_fit <- predict(fit, n.ahead = 24)$pred
AR_fit_se <- predict(fit, n.ahead = 24)$se
razlike = exp(AR_fit) - new_korona$V1
razlike
new_korona$V1
exp(AR_fit)
razlike
new_korona$V1
exp(AR_fit)
xt_diff = diff(x_no_sez)
library(forecast)
auto.arima(xt_diff)
fit <- arima(xt_diff, c(2, 0, 2))
AR_fit <- predict(fit, n.ahead = 24)$pred
AR_fit_se <- predict(fit, n.ahead = 24)$se
razlike = exp(AR_fit) - new_korona$V1
razlike
new_korona$V1
exp(AR_fit)
AR_fit
diffinv(AR_fit)
library(forecast)
auto.arima(xt_diff)
xt = ts(korona$V1, frequency = 7)
library(forecast)
auto.arima(xt)
fit <- arima(x, c(2, 1, 0), seasonal = c(0,1,1))
auto.arima(xt)
fit <- arima(x, c(2, 1, 0), seasonal = list(order = c(0, 1, 1), period = 7))
fit <- arima(xt, c(2, 1, 0), seasonal = list(order = c(0, 1, 1), period = 7))
AR_fit <- predict(fit, n.ahead = 24)$pred
AR_fit_se <- predict(fit, n.ahead = 24)$se
AR_fit
razlike = AR_fit - new_korona$V1
razlike
razlike = AR_fit+AR_fit_se - new_korona$V1
razlike
fit
xt = ts(korona$V1, frequency = 7)
plot.ts(xt)
plot.ts(log(xt))
plot.ts(xt)
plot.ts(log(xt))
xt_transform = log(xt)
library(forecast)
auto.arima(xt_transform)
fit <- arima(xt_transform, c(2, 1, 2), seasonal = list(order = c(2, 1, 0), period = 7))
fit
fit <- arima(xt_transform, c(2, 1, 2), seasonal = list(order = c(2, 1, 0), period = 7) d=1)
fit <- arima(xt_transform, c(2, 1, 2), seasonal = list(order = c(2, 1, 0), period = 7), d=1)
fit <- arima(xt_transform, c(2, 1, 2), seasonal = list(order = c(2, 1, 0), period = 7), d=1)
fit <- arima(xt_transform, c(2, 1, 2), seasonal = list(order = c(2, 1, 0), period = 7))
fit
fit$residuals
acf(fit$residuals)
auto.arima(diff(xt_transform))
auto.arima(diff(diff(xt_transform)))
auto.arima(diff(xt_transform))
xt = ts(korona$V1, frequency = 7)
xt_new = log(xt)
x_new_stl =stl(xt_new ,s.window = "periodic")
pacf(x.stl$time.series[,3])
acf(x.stl$time.series[,3]) #skok nakon 4 stupica - AR(4)
xt = ts(korona$V1, frequency = 7)
xt_new = log(xt)
x_new_stl =stl(xt_new ,s.window = "periodic")
pacf(x_new_stll$time.series[,3])
xt = ts(korona$V1, frequency = 7)
xt_new = log(xt)
x_new_stl =stl(xt_new ,s.window = "periodic")
pacf(x_new_stl$time.series[,3])
acf(x_new_stl$time.series[,3])
xt = ts(korona$V1, frequency = 7)
x.stl=stl(xt,s.window = "periodic")
plot.ts(xt, col="red", main="Podaci prije transformacije")
plot(x.stl,col="red", main="STL prije transofrmacije")
#uočavamo eksponencijalni trend, pa ćemo logaritmirati podatke
xt = log(xt)
x.stl=stl(xt,s.window = "periodic")
plot.ts(xt, col="blue", main="Podaci nakon logaritmiranja")
plot(x.stl,col="blue", main="STL nakon logaritmiranja")
x_no_sez = xt -x.stl$time.series[,1]
plot.ts(x_no_sez,col="green",main="Desezonalni niz") #uklananje sezonalnosti
x_no_trend = x_no_sez -x.stl$time.series[,2] #uklanjanje trenda
plot.ts(x_no_trend,col="green",main="Desezonalni niz sa uklonjenim trendom")
acf(x.stl$time.series[,3])
#5 stupića odskače od 23, što je više od 5% pa nemožemo pretpostaviti nekoreliranost
library('nortest')
lillie.test(x.stl$time.series[,3])#mala p vrijednost, ostaci nisu normalni - nemamo bijeli šum
AR_1 <- arima(x_no_sez, order = c(4,0,0)) #ovo javlja gresku jer nije stacionarno
xt_diff = diff(x_no_sez)
xt_diff <- diff(x_no_sez)
AR <- arima(xt_diff,order = c(4,0,0))
print(AR)
AR_1 <- arima(xt_diff,order = c(4,0,0)) #sad je okej
print(AR_1) #AIC je -18.32
AR_3 <- arima(xt_diff,order = c(3,0,0))
print(AR_3) #AIC je -18.32
AR_1 <-
arima(xt_diff,order = c(1,0,0)) #sad je okej
arima(xt_diff,order = c(1,0,0))
arima(xt_diff,order = c(2,0,0))
arima(xt_diff,order = c(0,0,1)) #AR(2) aic je -13
arima(xt_diff,order = c(0,0,1)) #MA(1) aic je -19
arima(xt_diff,order = c(0,0,1)) #MA(1) aic je -19ts.plot(xt)
arima(xt_diff,order = c(0,0,2)) #MA(1) aic je -19
arima(xt_diff,order = c(0,0,3)) #MA(1) aic je -19
arima(xt_diff,order = c(0,0,4)) #MA(1) aic je -19
arima(xt_diff,order = c(0,0,4)) #MA(1) aic je -24
arima(xt_diff,order = c(0,0,5)) #MA(1) aic je -24
arima(xt_diff,order = c(0,0,6)) #MA(1) aic je -24
arima(xt_diff,order = c(0,0,5)) #MA(1) aic je -24
arima(xt_diff,order = c(0,0,7)) #MA(1) aic je -24
arima(xt_diff,order = c(0,0,8)) #MA(1) aic je -24
arima(xt_diff,order = c(0,0,9)) #MA(1) aic je -24
arima(xt_diff,order = c(0,0,6)) #MA(1) aic je -29
arima(xt_diff,order = c(0,0,7)) #MA(1) aic je -29
arima(xt_diff,order = c(0,0,6)) #MA(1) aic je -29
arima(xt_diff,order = c(1,0,0)) #AR(1) aic je -6
arima(xt_diff,order = c(1,0,0)) #AR(1) aic je -6
arima(xt_diff,order = c(2,0,0)) #AR(2) aic je -13
arima(xt_diff,order = c(3,0,0)) #AR(1) aic je -6
arima(xt_diff,order = c(4,0,0)) #AR(1) aic je -6
arima(xt_diff,order = c(5,0,0)) #AR(1) aic je -6
AR
AR = arima(xt_diff,order = c(0,0,6)) # za taj model smo se odlucili
AR_final = arima(xt_diff,order = c(0,0,6)) # za taj model smo se odlucili
MA_final = arima(xt_diff,order = c(0,0,6)) # za taj model smo se odlucili
acf(MA_final$residuals)
lillie.test(MA_final$residuals)
future <- predict(MA_final , n.ahead = 24)$pred
future <- predict(MA_final , n.ahead = 24)$pred
future_se <- predict(MA_final , n.ahead = 24)$se
ts.plot(xt_diff)
points(future, type = "l")
points(future - 2*future_se, type = "l", col = 2, lty = 2)
points(future + 2*future_se, type = "l", col = 2, lty = 2)
ts.plot(xt_diff,xlim=c(0,40))
points(future, type = "l")
points(future - 2*future_se, type = "l", col = 2, lty = 2)
points(future + 2*future_se, type = "l", col = 2, lty = 2)
future
exp(future)
AR_1 <- arima(x_no_sez, order = c(4,0,0)) #ovo javlja gresku jer nije stacionarno, moramo diferencirati
AR_1 <- arima(x_no_sez, order = c(4,0,0)) #ovo javlja gresku jer nije stacionarno, moramo diferencirati
AR_1 <- arima(x_no_sez, order = c(4,0,0),include.mean = T) #ovo javlja gresku jer nije stacionarno, moramo diferencirati
AR_1 <- arima(x_no_sez, order = c(4,0,0),include.mean = T, d=1) #ovo javlja gresku jer nije stacionarno, moramo diferencirati
#kreiranje uzorka
cauchy = c() #prazan vektor
beta = c()
for(i in 1:50){
uzorak_c = rcauchy(25,0,2) #simuliranje uzorka
uzorak_b = rbeta(25,1,3)
cauchy = c(cauchy, mean(uzorak_c)) #kreiramo uzorak aritmetičkih sredina
beta = c(beta, mean(uzorak_b))
}
#grafičko testiranje dolaze li uzorci aritmetičkih sredina iz normalne razdiobe
#drugi način pomoću qqnorm i qqline
library(fitdistrplus)
FITb <- fitdist(beta, "norm")
plot(FITb) #bolje fitanje - čini se grafički više normalno
FITc <- fitdist(cauchy, "norm")
plot(FITc)
#procjena parametra te ks test za testiranje normalnosti
library(MASS)
fitb <- fitdistr(beta, "normal")
fitc <- fitdistr(cauchy, "normal")
parab <- fitb$estimate
parac <- fitc$estimate
ks.test(cauchy, "pnorm", parac[1],parac[2]) #ovo nije normalno
ks.test(beta, "pnorm",parab[1],parab[2]) #ovo ispada normalno
#takvi rezultati zato što -> beta ima konačan prvi moment, a cauchy nema
#testiranje srednjekvadratnog odstupanja - koristimo hi-kvadrat test
#H_0 -> sigma_0 = 0.5
#H_1 -> sigma_0 > 0.5
hi_kvadrat = ((50-1)/(0.5)**2 ) * var(beta) #testna statistika
pvalue = 1 - pchisq(hi_kvadrat, 50-1) #veliki p, pa ne odbacujemo H_0
pvalue
#kriticno podrucje
qchisq(0.01,49) #statistika ne upada u kriticno podrucje
FITb <- fitdist(beta, "norm")
plot(FITb) #bolje fitanje - čini se grafički više normalno
FITc <- fitdist(cauchy, "norm")
plot(FITc)
X = runif(30,0,1) #nasumičan uzorak uniformne jedinične distribucije
Y = X ** (1/3)
# grafička provjera dolazi li Y iz neke beta razdiobe
library(fitdistrplus)
plot(fitdist(Y, "beta"))
library(MASS)
plotdist(Z, "f", para=list(df1 = 2/3, df2 = 2))
#transformacija uzorka
Z = (3*Y) /(1-Y)
library(MASS)
plotdist(Z, "f", para=list(df1 = 2/3, df2 = 2))
xos <- seq(0,max(Z),0.1)
hist(Z,probability = TRUE)
lines(xos,df(xos,2/3,2),col="red")
plot(ecdf(Z))
curve(pf(x, df1 = 2/3, df2 = 2),  add=TRUE,col="red")
library(MASS)
plotdist(Z, "f", para=list(df1 = 2/3, df2 = 2))
#grafičko testiranje ovisnosti
dionica = read.csv("dionica.csv") #učitavanje podataka
par(mfrow=c(2,2))
plot(dionica$BDP, dionica$Cijena, col="red") # uopće se ne čini zavisnos
plot(dionica$ZAP, dionica$Cijena, col="blue") #moguća zavisnost
plot(dionica$KS, dionica$Cijena, col="green")
plot(dionica$MJ, dionica$Cijena, col= "orange") #moguća zavisnost
#testiranje ovisnosti kroz model
model = lm(dionica$Cijena ~ dionica$BDP+dionica$ZAP+dionica$KS+dionica$MJ)
summary(model)
#mali p value - model statisticki značajan
#ZAP zavisan najviše, MJ nakon njega, BDP nije tolko važan za cijenu
#pouzdana pruga za srednju vrijednost
plot(dionica$Cijena)
matrica = predict(model, level=0.9, i="c")
matrica = as.data.frame(matrica)
plot(dionica$Cijena)
lines(matrica$lwr, col="red")
lines(matrica$upr, col="red")
#testiranje da je koeficijent uz kamatna stopu 100
model2 = lm(dionica$Cijena ~dionica$BDP+dionica$ZAP+ offset(100*dionica$KS)+dionica$MJ)
anova(model2,model)
#velika p vrijednost -> jednostavniji model(model2) je "dovoljan"
#ne odbacujemo nul hipotezu, znaci da je ovaj koeficijent 100
#velika p vrijednost -> jednostavniji model(model2) je "dovoljan"
#ne odbacujemo nul hipotezu, znaci da je ovaj koeficijent 100
#ne postoji statisticki znacajna razlika izmedu modela
confint(model, level=0.95)
#velika p vrijednost -> jednostavniji model(model2) je "dovoljan"
#ne odbacujemo nul hipotezu, znaci da je ovaj koeficijent 100
#ne postoji statisticki znacajna razlika izmedu modela
confint(model, level=0.05)
#velika p vrijednost -> jednostavniji model(model2) je "dovoljan"
#ne odbacujemo nul hipotezu, znaci da je ovaj koeficijent 100
#ne postoji statisticki znacajna razlika izmedu modela
confint(model, level=0.95)
View(nove_dionice)
plot(predict(model2), c(25:36),xlim=c(1,28), ylim=c(0,2000))
predict(model2)
predict(model2)
#grafičko testiranje ovisnosti
dionica = read.csv("dionica.csv") #učitavanje podataka
par(mfrow=c(2,2))
plot(dionica$BDP, dionica$Cijena, col="red") # uopće se ne čini zavisnos
plot(dionica$ZAP, dionica$Cijena, col="blue") #moguća zavisnost
plot(dionica$KS, dionica$Cijena, col="green")
plot(dionica$MJ, dionica$Cijena, col= "orange") #moguća zavisnost
#testiranje ovisnosti kroz model
model = lm(dionica$Cijena ~ dionica$BDP+dionica$ZAP+dionica$KS+dionica$MJ)
summary(model)
#mali p value - model statisticki značajan
#ZAP zavisan najviše, MJ nakon njega, BDP nije tolko važan za cijenu
View(dionica)
View(dionica)
View(nove_dionice)
View(nove_dionice)
nove_dionice = read.csv("nova_cijena.csv")
model2= lm(nove_dionice$Cijena ~ nove_dionice$BDP+nove_dionice$ZAP+nove_dionice$KS+nove_dionice$MJ)
summary(model2)
#velika p vrijednost - model nije dobar
matrica = predict(model, level=0.9, i="p")
matrica = as.data.frame(matrica)
predict(model2)
plot(predict(model2), c(25:36),xlim=c(1,28), ylim=c(0,2000))
lines(matrica$lwr, col="red")
lines(matrica$upr, col="red")
#procjene nisu dobre -> premalen uzorak
predict(model2)
plot(predict(model2), c(25:36),xlim=c(1,28), ylim=c(0,2000))
nove_dionice = read.csv("nova_cijena.csv")
model2= lm(nove_dionice$Cijena ~ nove_dionice$BDP+nove_dionice$ZAP+nove_dionice$KS+nove_dionice$MJ)
summary(model2)
predict(model2)
#velika p vrijednost - model nije dobar
matrica = predict(model, level=0.9, i="p")
matrica = as.data.frame(matrica)
plot(predict(model2), c(25:36),xlim=c(1,28), ylim=c(0,2000))
lines(matrica$lwr, col="red")
lines(matrica$upr, col="red")
#procjene nisu dobre -> premalen uzorak
plot(predict(model2), c(25:36))
lines(matrica$lwr, col="red")
lines(matrica$upr, col="red")
plot(c(25:36), predict(model2))
lines(matrica$lwr, col="red")
lines(matrica$upr, col="red")
plot(c(25:36), predict(model2),xlim=c(0:100,ylim=c(0,1000)))
plot(c(25:36), predict(model2),xlim=c(0:100),ylim=c(0,1000)))
plot(c(25:36), predict(model2),xlim=c(0:100),ylim=c(0,1000))
plot(c(25:36), predict(model2),xlim=c(0,100),ylim=c(0,1000))
lines(matrica$lwr, col="red")
lines(matrica$upr, col="red")
plot(c(25:36), predict(model2),xlim=c(0,100),ylim=c(600,1200))
lines(matrica$lwr, col="red")
lines(matrica$upr, col="red")
plot(predict(model2),xlim=c(0,100),ylim=c(600,1200))
lines(matrica$lwr, col="red")
lines(matrica$upr, col="red")
prodaja = read.table("prodaja.dat", header=TRUE)
model = lm(prodaja$kolicina~prodaja$dan)
summary(model)
plot(prodaja$dan, prodaja$kolicina)
plot(prodaja$dan, prodaja$kolicina, col="red")
lines(model$fitted.values)
plot(prodaja$dan, prodaja$kolicina, col="red")
lines(model$fitted.values)
plot(prodaja$dan, prodaja$kolicina, col="bue")
plot(prodaja$dan, prodaja$kolicina, col="blue")
lines(model$fitted.values, col="red")
res = model$res
plot(prodaja$dan, res)
abline(a=0,b=0)
res = model$res
plot(model$fitted.values, res)
abline(a=0,b=0)
plot(prodaja$kolicina, predict(model),xlim=c(4,8), ylim=c(5,7))
abline(a=0,b=1, col="red")
plot(prodaja$dan, prodaja$kolicina)
plot(prodaja$dan, exp(prodaja$kolicina))
#ispitivanje statističke povezanosti varijable prijava o spolu i županiji
#grafički
zupanija = aggregate(auto$prijava, list(auto$zupanija, auto$prijava), FUN=length)
#prosječan iznos prijavljene štete po spolu
auto <- read.csv("auto.csv")
aggregate(auto$iznos, list(auto$spol), FUN=mean)
#ispitivanje statističke povezanosti varijable prijava o spolu i županiji
#grafički
zupanija = aggregate(auto$prijava, list(auto$zupanija, auto$prijava), FUN=length)
barplot(matrix(zupanija$x,ncol = 21,byrow = TRUE), beside=T, legend =  c('Nisu prijavili štetu','Prijavili su štetu'), names.arg = c(1:21), col=c('blue', 'gray'))
spol = aggregate(auto$prijava, list(auto$spol,auto$prijava), FUN=length)
barplot(matrix(spol$x,ncol = 2,byrow = TRUE), beside=T, legend = c('Nisu prijavili štetu','Prijavili su štetu'), names.arg = c("Muškarci", "Žene"), col=c('pink', 'gray'))
#uočimo kako nemamo podjednak broj podataka za svaku zupaniju te za svaki spol
aggregate(auto$prijava, list(auto$spol), FUN=length)
aggregate(auto$prijava, list(auto$zupanija), FUN=length)
#ineferencijalno
library(DescTools)
CramerV(auto$prijava, auto$spol) #manji od 0.1 - nema povezanosti
CramerV(auto$prijava, auto$zupanija) #manji od 0.1 - nema povezanosti
#vise utjece zupanija jer ima veci C. koeficijent
plot(nove_dionice$Cijena,xlim=c(0,100),ylim=c(600,1200))
lines(matrica$lwr, col="red")
lines(matrica$upr, col="red")
plot(nove_dionice$Cijena,xlim=c(0,30),ylim=c(600,1200))
lines(matrica$lwr, col="red")
lines(matrica$upr, col="red")
plot(nove_dionice$Cijena,xlim=c(0,30),ylim=c(600,1300))
plot(nove_dionice$Cijena,xlim=c(0,30),ylim=c(600,1300))
lines(matrica$lwr, col="red")
lines(matrica$upr, col="red")
plot(nove_dionice$Cijena,xlim=c(0,30),ylim=c(600,1700))
lines(matrica$lwr, col="red")
lines(matrica$upr, col="red")
plot(predict(model2),xlim=c(0,100),ylim=c(600,1200))
lines(matrica$lwr, col="red")
lines(matrica$upr, col="red")
plot(predict(model2),xlim=c(0,30),ylim=c(600,1700))
lines(matrica$lwr, col="red")
lines(matrica$upr, col="red")
#prosječan iznos prijavljene štete po spolu
auto <- read.csv("auto.csv")
aggregate(auto$iznos, list(auto$spol), FUN=mean)
zupanija = aggregate(auto$prijava, list(auto$zupanija, auto$prijava), FUN=length)
barplot(matrix(zupanija$x,ncol = 21,byrow = TRUE), beside=T, legend =  c('Nisu prijavili štetu','Prijavili su štetu'), names.arg = c(1:21), col=c('blue', 'gray'))
spol = aggregate(auto$prijava, list(auto$spol,auto$prijava), FUN=length)
barplot(matrix(spol$x,ncol = 2,byrow = TRUE), beside=T, legend = c('Nisu prijavili štetu','Prijavili su štetu'), names.arg = c("Muškarci", "Žene"), col=c('pink', 'gray'))
aggregate(auto$prijava, list(auto$spol), FUN=length)
aggregate(auto$prijava, list(auto$zupanija), FUN=length)
#Eva kaze da treba hi kvadrat?
chisq.test(auto$prijava, auto$spol)
chisq.test(auto$prijava, auto$zupanija)
#Eva kaze da treba hi kvadrat?
chisq.test(auto$prijava, auto$spol)
#hi kvadrat test
chisq.test(auto$prijava, auto$spol)
#hi kvadrat test
chisq.test(auto$prijava, auto$spol)
#hi kvadrat test H_0 -> nezavisne su
chisq.test(auto$prijava, auto$spol)
chisq.test(auto$prijava, auto$zupanija)
#hi kvadrat test H_0 -> nezavisne su
chisq.test(auto$prijava, auto$spol) #mali p vrijednost, odbacujem H_0
CramerV(auto$prijava, auto$zupanija)
CramerV(auto$prijava, auto$spol) #manji od 0.1 - nema povezanosti
chisq.test(auto$prijava, auto$zupanija) #velik p vrijednost, ne odbacujemo H_0
chisq.test(auto$prijava, auto$spol) #mali p vrijednost, odbacujem H_0
chisq.test(auto$prijava, auto$zupanija) #velik p vrijednost, ne odbacujemo H_0
CramerV(auto$prijava, auto$spol) #manji od 0.1 - nema povezanosti
CramerV(auto$prijava, auto$zupanija)
zupanija = aggregate(auto$prijava, list(auto$zupanija, auto$prijava), FUN=length)
barplot(matrix(zupanija$x,ncol = 21,byrow = TRUE), beside=T, legend =  c('Nisu prijavili štetu','Prijavili su štetu'), names.arg = c(1:21), col=c('blue', 'gray'))
spol = aggregate(auto$prijava, list(auto$spol,auto$prijava), FUN=length)
barplot(matrix(spol$x,ncol = 2,byrow = TRUE), beside=T, legend = c('Nisu prijavili štetu','Prijavili su štetu'), names.arg = c("Muškarci", "Žene"), col=c('pink', 'gray'))
View(auto)
#prosječan iznos prijavljene štete po spolu
auto <- read.csv("auto.csv")
aggregate(auto$iznos, list(auto$spol), FUN=mean)
model <- lm(auto$iznos ~auto$dob + auto$iskustvo)
#ispitivanje linearne povezanosti dobi i duljini vozačkog iskustva -> obje su neprekidne
auto
#ispitivanje linearne povezanosti dobi i duljini vozačkog iskustva -> obje gledamo kao neprekidne
corr(auto$dob,auto$iskustvo,method="spearman")
#ispitivanje linearne povezanosti dobi i duljini vozačkog iskustva -> obje gledamo kao neprekidne
cor(auto$dob,auto$iskustvo,method="spearman")
cor(auto$dob,auto$iskustvo,method="pearson")
cor(auto$dob,auto$iskustvo,method="spearman")
cor(auto$dob,auto$iskustvo,method="pearson")
#ispitivanje linearne povezanosti dobi i duljine vozačkog iskustva -> obje gledamo kao neprekidne
#grafički
plot(auto$dob, auto$iskustvo)
#ispitivanje linearne povezanosti dobi i duljine vozačkog iskustva -> obje gledamo kao neprekidne
#grafički
plot(auto$dob, auto$iskustvo, col="blue")
ggscatter(df, x = "wt", y = "mpg",
add = "reg.line", conf.int = TRUE,
add.params = list(fill = "lightgray"),
ggtheme = theme_minimal()
)+
stat_cor(method = "pearson",
label.x = 3, label.y = 30)
library(ggplot2)
library(ggpubr)
install.packages("ggpubr")
library(ggplot2)
library(ggpubr)
install.packages("ggpubr")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(ggpubr)
install.packages("ggpubr")
install.packages("ggpubr")
install.packages("ggpubr")
install.packages("ggpubr")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(ggplot2)
library(ggplot2)
library(ggpubr)
library(ggplot2)
library(ggplot2)
library(ggpubr)
#ispitivanje linearne povezanosti dobi i duljine vozačkog iskustva -> obje gledamo kao neprekidne
#grafički
plot(auto$dob, auto$iskustvo, col="blue") #ovaj grafički prikaz mi već djeluje kao da bi mogle biti jako zavisne
#inefercijalno
cor(auto$dob,auto$iskustvo,method="spearman") #0.9952043
cor(auto$dob,auto$iskustvo,method="pearson") #0.9969117
#koeficijenti blizu 1, jako zavisne, nebi smjele ići zajedno u model!
library(ggplot2)
remove.packages("rlang")
library(ggplot2)
library(ggplot2)
library(ggpubr)
library(ggplot2)
library(ggpubr)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
remove.packages("rlang")
library(ggplot2)
update.packages(ask = FALSE)
